[INCLUDE=presentation]
Title         : Python i roboty(ka)
Sub Title     : 
Author        : Marek Gawryszewski
Affiliation   : 
Email         : marek.gawryszewski@outlook.com
Reveal Theme  : simple
Beamer Theme  : singapore

[TITLE]

#O mnie

- programista w Harman 
- doktorant w Instytucie Automatyki PŁ



<!--![Harman]
![hrp1v0bb] -->

[Harman]: images/Harman.jpg "Harman" { width:auto; max-width:40% }

[hrp1v0bb]: images/hrp1v0bb.jpeg "hrp1v0bb" { width:auto; max-width:40% }

#O czym opowiem?
* Czym zajmuje się robotyka?
* Gdzie w tym jest miejsce dla Pythona?




#Zacznijmy od pytań!
* {.fragment} Kto chce zbudować robota?
* {.fragment} 

#Jak zbudować robota?

Dwa zasadnicze elementy: sprzęt i oprogramowanie.

#Hardware
* Chasis
* Czujniki
* napęd (elementy wykonawcze)
* elektronika

#Software
* system operacyjny / bare metal
* narzędzia systemowe

# Biblioteki
* ROS
* OpenCV
* ...
~

#Aplikacja
  * HAL
  * sterowanie
  * logika
  ~


#I tu na scenę wkracza Python...

~ Center
![python]
~

[python]: images/python.png "python" { width:auto; max-width:90% }


# ROS
![rosLarge]

[rosLarge]: images/rosLarge.png "rosLarge" { width:auto; max-width:90% }

[ROS]
ROS to framework, który rozwiązuje podstawowe problemy robotyków

[ROS]: http://www.ros.org

#OpenCV
![OpenCV_Logo.svg]
---
 Opencv to bibliteka funkcji przetwarzania obrazów. 
 Zawiera obsługę obrazów, kamer, filmów.
  Dostarcza implementację znanych algorytmów CV (Computer Vision - widzenie maszynowe).

[OpenCV_Logo.svg]: images/2000px-OpenCV_Logo_with_text_svg_version.svg.png "2000px-OpenCV_Logo_with_text_svg_version.svg" { width:auto; max-width:40% }

# OPML



#Demo 1

Publisher i Subscriber ROS

#Demo 2

Obraz z kamery publikowany jako nod jest przetwarzany w aplikacji korzystającej z OpenCV.

# Q&A

#Dziękuję za uwagę :-)

kontakt: marek.gawryszewski@outlook.com
